var cloud="#ifdef GL_ES precision mediump float;#endif #extension GL_OES_standard_derivatives :enable uniform float time;uniform vec2 mouse;uniform vec2 resolution;const int NUM_STEPS = 8;const float PI = 3.1415;const float EPSILON = 1e-3;// sea const int ITER_GEOMETRY = 3;const int ITER_FRAGMENT = 5;const float SEA_HEIGHT = .6;const float SEA_CHOPPY = 4.0;const float SEA_SPEED = .8;const float SEA_FREQ = .16;const vec3 SEA_BASE = vec3(0.1,0.19,0.22);const vec3 SEA_WATER_COLOR = vec3(0.8,0.9,0.6);float SEA_TIME = .0;mat2 octave_m = mat2(1.6,1.2,-1.2,1.6);float hash(vec2 p){float h = dot(p,vec2(127.1,311.7));return fract(sin(h)*43758.5453123)}float noise(in vec2 p){vec2 i = floor(p);vec2 f = fract(p);vec2 u = f*f*(3.0-2.0*f);return -1.0+2.0*mix(mix(hash(i+vec2(0.0,0.0)),hash(i+vec2(1.0,0.0)),u.x),mix(hash(i+vec2(0.0,1.0)),hash(i+vec2(1.0,1.0)),u.x),u.y)}float sea_octave(vec2 uv,float choppy){uv+= noise(uv);vec2 wv = 1.0-abs(sin(uv));vec2 swv = abs(cos(uv));wv = mix(wv,swv,wv);return pow(1.0-pow(wv.x * wv.y,0.65),choppy)}float map(vec2 uv){float freq = SEA_FREQ;float amp = SEA_HEIGHT;float choppy = SEA_CHOPPY;float d,h = .0;for(int i = 0;i < ITER_GEOMETRY;i++){d = sea_octave((uv+SEA_TIME)*freq,choppy);d+= sea_octave((uv-SEA_TIME)*freq,choppy);h+= d * amp;uv *= octave_m;freq *= 1.9;amp *= .22;choppy = mix(choppy,1.0,0.2)}return h}float map_detailed(vec3 p){float freq = SEA_FREQ;float amp = SEA_HEIGHT;float choppy = SEA_CHOPPY;vec2 uv = p.xz;uv.x *= .75;float d,h = .0;for(int i = 0;i < ITER_FRAGMENT;i++){d = sea_octave((uv+SEA_TIME)*freq,choppy);d+= sea_octave((uv-SEA_TIME)*freq,choppy);h+= d * amp;uv *= octave_m;freq *= 1.9;amp *= .22;choppy = mix(choppy,1.0,0.2)}return p.y - h}// tracing vec3 getNormal(vec3 p,float eps){vec3 n;n.y = map_detailed(p);n.x = map_detailed(vec3(p.x+eps,p.y,p.z)) - n.y;n.z = map_detailed(vec3(p.x,p.y,p.z+eps)) - n.y;n.y = eps;return normalize(n)}varying vec2 vUv;void main(void){SEA_TIME = time * SEA_SPEED;vec2 uv = vUv;uv = uv * 31.0;float color = map(uv);vec3 n = getNormal(vec3(uv.x,1.,uv.y),.001);gl_FragColor = vec4(vec3(color),1.0)}"
