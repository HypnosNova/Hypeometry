var demoMap = {
	urlData: "chapter=第一章&name=惊奇",
	hasRotateBtn:true,
	box: [
		[-6, -1, -4],[-6, -1, -4],[-6, -1, -4],……………………
	],
	building: [
		[5.5, 0.5, 0.5, 6, 8, 5]
	],
	startPoint: [0.4, 0, 0, 2],
	endPoint: [0.4, 6, 3, 0],
	map45: [],
	boxColor: 0xff00ff,
	colN: 40,
	rowN: 40,
	patch:[],
	gameNewSetting: function() {
		//一些关卡的特殊设置
	},
	gameEvent: function(startPoint, endPoint) {
		//游戏循环所要调用的脚本
	}
}
地图数据结构如上。

其中box为路径，大小宽度都是1，系统规定的。数组元素也是个数组，代表x,y,z坐标。如果存在第四个值，表示的是颜色，一般为16进制数，如0xff00ff

building为装饰物，和路径无关，是看得见摸不着的东西，用来美化和装饰地图。前三个为长宽高，后三个为x,y,z坐标。如果存在第七个参数，表示的是颜色

colN: 40,
rowN: 40,
这2个参数默认是40，一般40已经足够大部分地图用了。手机一般只显示的下20不到的大小

patch是地图补丁，由于空间点映射到平面是多对一，导致地图路径计算可能会出现分歧，从而需要补丁地图规定路径。也可以用于楼梯或者传送门等特殊路径。它修改的是邻接表

gameNewSetting是画地图时会调用的函数（如果存在这个函数的话），因为不同关卡会存在特殊事件，会初始化一些独特的变量，函数等。它会在绘制完关卡后调用，不能用来修改地图。

gameEvent是地图游戏开始时会一直调用的函数，主要是用来判断游戏是否获胜，或者触发一些机关事件等。

startpoint就是主角的初始位置

boxColor为场景里的路径以及装饰物的默认颜色

hasRotateBtn为是否添加旋转视角的按钮